{"remainingRequest":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/thread-loader/dist/cjs.js!/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/babel-loader/lib/index.js!/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/masaintmartin/Workspaces/Web/github-ynov-vue/src/components/Projects.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/src/components/Projects.vue","mtime":1540536104473},{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539931134000},{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539931134000},{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar _this2 = this;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: 'Projects',\n  props: {},\n  data: function data() {\n    return {\n      user_selected: \"All\",\n      project_selected: \"All\",\n      projects: [],\n      projects_to_display: [],\n      errorDate: \"\",\n      selectedDate: {\n        start: \"\",\n        end: \"\"\n      },\n      usernames: [],\n      API_TOKEN: \"f9b17e0a48f859a097773b394bf04082e83c9176\"\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var that = this;\n    axios.defaults.headers.common[\"Authorization\"] = \"token \" + this.API_TOKEN;\n    axios({\n      method: \"GET\",\n      \"url\": \"https://api.github.com/search/repositories?q=github-ynov-vue\"\n    }).then(function (result) {\n      if (result.data.items.length > 0) {\n        result.data.items.forEach(function (project) {\n          _this.usernames.push(project.full_name.split('/')[0]);\n\n          project.commits = [];\n          axios({\n            method: \"GET\",\n            \"url\": \"https://api.github.com/repos/\" + project.full_name + \"/commits\"\n          }).then(function (res) {\n            if (res.data.length > 0) {\n              var last_date = \"\";\n              res.data.forEach(function (commit) {\n                var date_commit = that.formatDate(new Date(commit.commit.author.date));\n\n                if (date_commit != last_date) {\n                  last_date = date_commit;\n                  project.commits.push([]);\n                }\n\n                project.commits[project.commits.length - 1].push(commit);\n              });\n            }\n          });\n          axios({\n            method: \"GET\",\n            \"url\": \"https://api.github.com/repos/\" + project.full_name + \"/readme\"\n          }).then(function (res) {\n            console.log(_this.b64DecodeUnicode(res.data.content));\n            project.readme = _this.b64DecodeUnicode(res.data.content).replace(/(?:\\r\\n|\\r|\\n)/g, '</br>');\n          });\n\n          _this.projects.push(project);\n        });\n      }\n\n      _this.projects_to_display = Object.assign(_this.projects);\n      console.log(_this.projects_to_display);\n    });\n  },\n  mounted: function mounted() {},\n  methods: {\n    onDateSelected: function onDateSelected(daterange) {\n      if (daterange.start != null && daterange.end != null) {\n        this.selectedDate.start = new Date(daterange.start);\n        this.selectedDate.end = new Date(daterange.end);\n        this.errorDate = \"\";\n      } else {\n        this.errorDate = \"Select a date interval\";\n      }\n\n      this.refreshData();\n    },\n    refreshData: function refreshData(event) {\n      var new_array = JSON.parse(JSON.stringify(this.projects));\n      var last = new_array.length;\n\n      if (this.project_selected != \"All\") {\n        for (var i = 0; i < last; i++) {\n          if (new_array[i].full_name != this.project_selected) {\n            new_array.splice(i, 1);\n            i--;\n            last--;\n          }\n        }\n      }\n\n      last = new_array.length;\n\n      if (this.user_selected != \"All\") {\n        for (i = 0; i < last; i++) {\n          if (new_array[i].full_name.split('/')[0] != this.user_selected) {\n            new_array.splice(i, 1);\n            i--;\n            last--;\n          }\n        }\n      }\n\n      this.projects_to_display = new_array;\n    },\n    formatDate: function formatDate(date) {\n      date = new Date(date);\n      var monthNames = [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Aout\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"];\n      var day = date.getDate();\n      var monthIndex = date.getMonth();\n      var year = date.getFullYear();\n      return day + ' ' + monthNames[monthIndex] + ' ' + year;\n    },\n    resetDate: function resetDate() {\n      _this2.selectedDate.start = \"\";\n      _this2.selectedDate.end = \"\";\n    },\n    b64DecodeUnicode: function b64DecodeUnicode(str) {\n      return decodeURIComponent(Array.prototype.map.call(atob(str), function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n    }\n  }\n};",{"version":3,"sources":["Projects.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"Projects\">\n    <div id=\"filter-container\">\n      <div>\n        <label for=\"date_range\">Date range :</label>\n        </br>\n        <date-picker id=\"date_range\" name=\"date_range\" i18n=\"EN\" @selected=\"onDateSelected\" compat=\"true\"></date-picker>\n        <button v-on:click=\"resetDate()\">\n          X\n        </button>\n      </div>\n      <div>\n        <label for=\"select_user\">User :</label>\n        </br>\n        <select name=\"select_user\" id=\"select_user\" v-on:change=\"refreshData\" v-model=\"user_selected\">\n          <option value=\"All\">All</option>\n          <option v-for=\"option in usernames\" v-bind:value=\"option\">{{option}}</option>\n        </select>\n      </div>\n      <div>\n        <label for=\"project_select\">Projet :</label>\n        </br>\n        <select name=\"project_select\" id=\"project_select\" v-on:change=\"refreshData\" v-model=\"project_selected\">\n          <option value=\"All\">All</option>\n          <option v-for=\"project in projects\" v-bind:value=\"project.full_name\">{{project.full_name}}</option>\n        </select>\n      </div>\n    </div>\n\n    <span>\n      {{errorDate}}\n    </span>\n    <div id=\"project-container\" class=\"uk-container\">\n      <div v-for=\"project in projects_to_display\" class=\"project\">\n        <div class=\"project-full_name\">\n          <h2>{{project.full_name}}</h2>\n        </div>\n        <div class=\"left-side\">\n          <div>\n            Commits : {{project.commits.length}}\n          </div>\n          <div class=\"commit-message\" v-for=\"commit_container in project.commits\">\n            {{formatDate(commit_container[0].commit.author.date)}}\n            <div v-for=\"commit in commit_container\" class=\"commits-details\">\n              {{commit.commit.author.name}} ({{commit.commit.author.email}}) : {{commit.commit.message}}\n            </div>\n          </div>\n        </div>\n        <div class=\"right-side\">\n          .README\n          <div v-html=\"project.readme\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n    export default {\n        name: 'Projects',\n        props: {},\n        data: ()=>{\n            return {\n                user_selected: \"All\",\n                project_selected: \"All\",\n                projects: [],\n                projects_to_display:[],\n                errorDate: \"\",\n                selectedDate: {\n                    start: \"\",\n                    end: \"\"\n                },\n                usernames:[],\n                API_TOKEN: \"f9b17e0a48f859a097773b394bf04082e83c9176\"\n            }\n        },\n        created(){\n            var that = this\n            axios.defaults.headers.common[\"Authorization\"] = \"token \"+this.API_TOKEN;\n            axios({method: \"GET\", \"url\": \"https://api.github.com/search/repositories?q=github-ynov-vue\"}).then((result)=>{\n                if(result.data.items.length > 0) {\n                    result.data.items.forEach((project) => {\n                        this.usernames.push(project.full_name.split('/')[0])\n                        project.commits = []\n                        axios({method: \"GET\", \"url\": \"https://api.github.com/repos/\"+project.full_name+\"/commits\"}).then((res)=>{\n                            if(res.data.length > 0) {\n                                var last_date = \"\";\n                                res.data.forEach((commit) => {\n                                    var date_commit = that.formatDate(new Date(commit.commit.author.date))\n                                    if(date_commit != last_date){\n                                        last_date = date_commit\n                                        project.commits.push([])\n                                    }\n                                    project.commits[project.commits.length-1].push(commit)\n                                })\n                            }\n                        })\n                        axios({method:\"GET\", \"url\":\"https://api.github.com/repos/\"+project.full_name+\"/readme\"}).then((res)=>{\n                            console.log(this.b64DecodeUnicode(res.data.content))\n                            project.readme = this.b64DecodeUnicode(res.data.content).replace(/(?:\\r\\n|\\r|\\n)/g, '</br>');\n                        })\n                        this.projects.push(project)\n                    })\n                }\n                this.projects_to_display = Object.assign(this.projects)\n                console.log(this.projects_to_display)\n            })\n        },\n        mounted(){\n        },\n        methods: {\n            onDateSelected: function (daterange) {\n                if(daterange.start != null && daterange.end != null){\n                    this.selectedDate.start = new Date(daterange.start)\n                    this.selectedDate.end = new Date(daterange.end)\n                    this.errorDate = \"\"\n                }\n                else{\n                    this.errorDate = \"Select a date interval\"\n                }\n                this.refreshData()\n            },\n            refreshData: function(event){\n                var new_array = JSON.parse(JSON.stringify(this.projects));\n                var last = new_array.length\n                if(this.project_selected != \"All\"){\n                    for(var i = 0; i<last;i++){\n                        if(new_array[i].full_name != this.project_selected){\n                            new_array.splice(i, 1)\n                            i--\n                            last--\n                        }\n                    }\n                }\n                last = new_array.length\n                if(this.user_selected != \"All\"){\n                    for(i = 0; i<last;i++){\n                        if(new_array[i].full_name.split('/')[0] != this.user_selected){\n                            new_array.splice(i, 1)\n                            i--\n                            last--\n                        }\n                    }\n                }\n\n\n\n                this.projects_to_display = new_array\n            },\n            formatDate: (date) => {\n                date = new Date(date)\n                var monthNames = [\n                    \"Janvier\", \"Février\", \"Mars\",\n                    \"Avril\", \"Mai\", \"Juin\", \"Juillet\",\n                    \"Aout\", \"Septembre\", \"Octobre\",\n                    \"Novembre\", \"Décembre\"\n                ];\n\n                var day = date.getDate();\n                var monthIndex = date.getMonth();\n                var year = date.getFullYear();\n\n                return day + ' ' + monthNames[monthIndex] + ' ' + year;\n            },\n            resetDate: () => {\n                this.selectedDate.start = \"\"\n                this.selectedDate.end = \"\"\n            },\n            b64DecodeUnicode: (str)=> {\n                return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\n                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n                }).join(''))\n            }\n        }\n    }\n</script>\n\n<style scoped>\n  h3 {\n    margin: 40px 0 0;\n  }\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n  a {\n    color: #42b983;\n  }\n  #filter-container{\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    height: 70px;\n    background: #878787;\n  }\n  @media (max-width: 768px) {\n    #filter-container{\n      flex-direction: column;\n    }\n  }\n  #filter-container select{\n    background: transparent;\n    border-radius: 0;\n    border: 0;\n    width: 200px;\n    color: #FFF;\n    border: 0;\n  }\n  .project{\n    width: 100%;\n    background: #efefef;\n    border-radius: .3em;\n    margin-bottom: 10px;\n    margin-top: 10px;\n    text-align: left;\n    padding: 10px;\n  }\n  .project-full_name{\n    text-align: center;\n  }\n  .commit-message{\n    margin: 10px 0;\n  }\n  .commits-details{\n    border-left: 1px solid black;\n    margin-left: 15px;\n    padding-left: 20px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n  .left-side,\n  .right-side{\n    width: 50%;\n    display: inline-block;\n    vertical-align: top;\n  }\n  @media (max-width: 768px) {\n    .left-side,\n    .right-side{\n      width: 100%;\n    }\n  }\n</style>\n"],"sourceRoot":"src/components"}]}