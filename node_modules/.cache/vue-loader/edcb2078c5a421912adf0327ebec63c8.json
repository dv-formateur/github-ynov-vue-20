{"remainingRequest":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/masaintmartin/Workspaces/Web/github-ynov-vue/src/components/Projects.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/src/components/Projects.vue","mtime":1540535137963},{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539931134000},{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/cache-loader/dist/cjs.js","mtime":1539931134000},{"path":"/Users/masaintmartin/Workspaces/Web/github-ynov-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nexport default {\n    name: 'Projects',\n    props: {},\n    data: ()=>{\n        return {\n            user_selected: \"All\",\n            project_selected: \"All\",\n            projects: [],\n            projects_to_display:[],\n            errorDate: \"\",\n            selectedDate: {\n                start: \"\",\n                end: \"\"\n            },\n            usernames:[]\n        }\n    },\n    created(){\n        var that = this\n        axios.defaults.headers.common[\"Authorization\"] = \"token f9b17e0a48f859a097773b394bf04082e83c9176\";\n        axios({method: \"GET\", \"url\": \"https://api.github.com/search/repositories?q=github-ynov-vue\"}).then((result)=>{\n            if(result.data.items.length > 0) {\n                result.data.items.forEach((project) => {\n                    this.usernames.push(project.full_name.split('/')[0])\n                    project.commits = []\n                    axios({method: \"GET\", \"url\": \"https://api.github.com/repos/\"+project.full_name+\"/commits\"}).then((res)=>{\n                        if(res.data.length > 0) {\n                            var last_date = \"\";\n                            res.data.forEach((commit) => {\n                                var date_commit = that.formatDate(new Date(commit.commit.author.date))\n                                if(date_commit != last_date){\n                                    last_date = date_commit\n                                    project.commits.push([])\n                                }\n                                project.commits[project.commits.length-1].push(commit)\n                            })\n                        }\n                    })\n                    axios({method:\"GET\", \"url\":\"https://api.github.com/repos/\"+project.full_name+\"/readme\"}).then((res)=>{\n                        console.log(this.b64DecodeUnicode(res.data.content))\n                        project.readme = this.b64DecodeUnicode(res.data.content).replace(/(?:\\r\\n|\\r|\\n)/g, '</br>');\n                    })\n                    this.projects.push(project)\n                })\n            }\n            this.projects_to_display = Object.assign(this.projects)\n            console.log(this.projects_to_display)\n        })\n    },\n    mounted(){\n    },\n    methods: {\n        onDateSelected: function (daterange) {\n            if(daterange.start != null && daterange.end != null){\n                this.selectedDate.start = new Date(daterange.start)\n                this.selectedDate.end = new Date(daterange.end)\n                this.errorDate = \"\"\n            }\n            else{\n                this.errorDate = \"Select a date interval\"\n            }\n            this.refreshData()\n        },\n        refreshData: function(event){\n            var new_array = JSON.parse(JSON.stringify(this.projects));\n            var last = new_array.length\n            if(this.project_selected != \"All\"){\n                for(var i = 0; i<last;i++){\n                    if(new_array[i].full_name != this.project_selected){\n                        new_array.splice(i, 1)\n                        i--\n                        last--\n                    }\n                }\n            }\n            last = new_array.length\n            if(this.user_selected != \"All\"){\n                for(i = 0; i<last;i++){\n                    if(new_array[i].full_name.split('/')[0] != this.user_selected){\n                        new_array.splice(i, 1)\n                        i--\n                        last--\n                    }\n                }\n            }\n\n\n\n            this.projects_to_display = new_array\n        },\n        formatDate: (date) => {\n            date = new Date(date)\n            var monthNames = [\n                \"Janvier\", \"Février\", \"Mars\",\n                \"Avril\", \"Mai\", \"Juin\", \"Juillet\",\n                \"Aout\", \"Septembre\", \"Octobre\",\n                \"Novembre\", \"Décembre\"\n            ];\n\n            var day = date.getDate();\n            var monthIndex = date.getMonth();\n            var year = date.getFullYear();\n\n            return day + ' ' + monthNames[monthIndex] + ' ' + year;\n        },\n        resetDate: () => {\n            this.selectedDate.start = \"\"\n            this.selectedDate.end = \"\"\n        },\n        b64DecodeUnicode: (str)=> {\n            return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n            }).join(''))\n        }\n    }\n}\n",{"version":3,"sources":["Projects.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Projects.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"Projects\">\n    <div id=\"filter-container\">\n      <div>\n        <label for=\"date_range\">Date range :</label>\n        </br>\n        <date-picker id=\"date_range\" name=\"date_range\" i18n=\"EN\" @selected=\"onDateSelected\" compat=\"true\"></date-picker>\n        <button v-on:click=\"resetDate()\">\n          X\n        </button>\n      </div>\n      <div>\n        <label for=\"select_user\">User :</label>\n        </br>\n        <select name=\"select_user\" id=\"select_user\" v-on:change=\"refreshData\" v-model=\"user_selected\">\n          <option value=\"All\">All</option>\n          <option v-for=\"option in usernames\" v-bind:value=\"option\">{{option}}</option>\n        </select>\n      </div>\n      <div>\n        <label for=\"project_select\">Projet :</label>\n        </br>\n        <select name=\"project_select\" id=\"project_select\" v-on:change=\"refreshData\" v-model=\"project_selected\">\n          <option value=\"All\">All</option>\n          <option v-for=\"project in projects\" v-bind:value=\"project.full_name\">{{project.full_name}}</option>\n        </select>\n      </div>\n    </div>\n\n    <span>\n      {{errorDate}}\n    </span>\n    <div id=\"project-container\" class=\"uk-container\">\n      <div v-for=\"project in projects_to_display\" class=\"project\">\n        <div class=\"project-full_name\">\n          <h2>{{project.full_name}}</h2>\n        </div>\n        <div class=\"left-side\">\n          <div>\n            Commits : {{project.commits.length}}\n          </div>\n          <div class=\"commit-message\" v-for=\"commit_container in project.commits\">\n            {{formatDate(commit_container[0].commit.author.date)}}\n            <div v-for=\"commit in commit_container\" class=\"commits-details\">\n              {{commit.commit.author.name}} ({{commit.commit.author.email}}) : {{commit.commit.message}}\n            </div>\n          </div>\n        </div>\n        <div class=\"right-side\">\n          .README\n          <div v-html=\"project.readme\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n    export default {\n        name: 'Projects',\n        props: {},\n        data: ()=>{\n            return {\n                user_selected: \"All\",\n                project_selected: \"All\",\n                projects: [],\n                projects_to_display:[],\n                errorDate: \"\",\n                selectedDate: {\n                    start: \"\",\n                    end: \"\"\n                },\n                usernames:[]\n            }\n        },\n        created(){\n            var that = this\n            axios.defaults.headers.common[\"Authorization\"] = \"token f9b17e0a48f859a097773b394bf04082e83c9176\";\n            axios({method: \"GET\", \"url\": \"https://api.github.com/search/repositories?q=github-ynov-vue\"}).then((result)=>{\n                if(result.data.items.length > 0) {\n                    result.data.items.forEach((project) => {\n                        this.usernames.push(project.full_name.split('/')[0])\n                        project.commits = []\n                        axios({method: \"GET\", \"url\": \"https://api.github.com/repos/\"+project.full_name+\"/commits\"}).then((res)=>{\n                            if(res.data.length > 0) {\n                                var last_date = \"\";\n                                res.data.forEach((commit) => {\n                                    var date_commit = that.formatDate(new Date(commit.commit.author.date))\n                                    if(date_commit != last_date){\n                                        last_date = date_commit\n                                        project.commits.push([])\n                                    }\n                                    project.commits[project.commits.length-1].push(commit)\n                                })\n                            }\n                        })\n                        axios({method:\"GET\", \"url\":\"https://api.github.com/repos/\"+project.full_name+\"/readme\"}).then((res)=>{\n                            console.log(this.b64DecodeUnicode(res.data.content))\n                            project.readme = this.b64DecodeUnicode(res.data.content).replace(/(?:\\r\\n|\\r|\\n)/g, '</br>');\n                        })\n                        this.projects.push(project)\n                    })\n                }\n                this.projects_to_display = Object.assign(this.projects)\n                console.log(this.projects_to_display)\n            })\n        },\n        mounted(){\n        },\n        methods: {\n            onDateSelected: function (daterange) {\n                if(daterange.start != null && daterange.end != null){\n                    this.selectedDate.start = new Date(daterange.start)\n                    this.selectedDate.end = new Date(daterange.end)\n                    this.errorDate = \"\"\n                }\n                else{\n                    this.errorDate = \"Select a date interval\"\n                }\n                this.refreshData()\n            },\n            refreshData: function(event){\n                var new_array = JSON.parse(JSON.stringify(this.projects));\n                var last = new_array.length\n                if(this.project_selected != \"All\"){\n                    for(var i = 0; i<last;i++){\n                        if(new_array[i].full_name != this.project_selected){\n                            new_array.splice(i, 1)\n                            i--\n                            last--\n                        }\n                    }\n                }\n                last = new_array.length\n                if(this.user_selected != \"All\"){\n                    for(i = 0; i<last;i++){\n                        if(new_array[i].full_name.split('/')[0] != this.user_selected){\n                            new_array.splice(i, 1)\n                            i--\n                            last--\n                        }\n                    }\n                }\n\n\n\n                this.projects_to_display = new_array\n            },\n            formatDate: (date) => {\n                date = new Date(date)\n                var monthNames = [\n                    \"Janvier\", \"Février\", \"Mars\",\n                    \"Avril\", \"Mai\", \"Juin\", \"Juillet\",\n                    \"Aout\", \"Septembre\", \"Octobre\",\n                    \"Novembre\", \"Décembre\"\n                ];\n\n                var day = date.getDate();\n                var monthIndex = date.getMonth();\n                var year = date.getFullYear();\n\n                return day + ' ' + monthNames[monthIndex] + ' ' + year;\n            },\n            resetDate: () => {\n                this.selectedDate.start = \"\"\n                this.selectedDate.end = \"\"\n            },\n            b64DecodeUnicode: (str)=> {\n                return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\n                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n                }).join(''))\n            }\n        }\n    }\n</script>\n\n<style scoped>\n  h3 {\n    margin: 40px 0 0;\n  }\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n  a {\n    color: #42b983;\n  }\n  #filter-container{\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    height: 70px;\n    background: #878787;\n  }\n  @media (max-width: 768px) {\n    #filter-container{\n      flex-direction: column;\n    }\n  }\n  #filter-container select{\n    background: transparent;\n    border-radius: 0;\n    border: 0;\n    width: 200px;\n    color: #FFF;\n    border: 0;\n  }\n  .project{\n    width: 100%;\n    background: #efefef;\n    border-radius: .3em;\n    margin-bottom: 10px;\n    margin-top: 10px;\n    text-align: left;\n    padding: 10px;\n  }\n  .project-full_name{\n    text-align: center;\n  }\n  .commit-message{\n    margin: 10px 0;\n  }\n  .commits-details{\n    border-left: 1px solid black;\n    margin-left: 15px;\n    padding-left: 20px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n  .left-side,\n  .right-side{\n    width: 50%;\n    display: inline-block;\n    vertical-align: top;\n  }\n  @media (max-width: 768px) {\n    .left-side,\n    .right-side{\n      width: 100%;\n    }\n  }\n</style>\n"]}]}